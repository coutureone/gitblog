<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom"><id>https://github.com/coutureone/gitblog</id><title>RSS feed of coutureone's gitblog</title><updated>2025-07-22T10:16:03.995190+00:00</updated><link href="https://github.com/coutureone/gitblog"/><link href="https://raw.githubusercontent.com/coutureone/gitblog/master/feed.xml" rel="self"/><generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator><entry><id>https://github.com/coutureone/gitblog/issues/15</id><title>项目主观评分</title><updated>2025-07-22T10:16:04.262085+00:00</updated><content type="html"><![CDATA[<p> 关于公开项目评标在主观分上，尽可能需要设置评分标准的人多设置几个，避免选项只有0和其他，否则打分是要写说明的。</p>
]]></content><link href="https://github.com/coutureone/gitblog/issues/15"/><category term="随笔"/><published>2025-07-22T10:15:35+00:00</published></entry><entry><id>https://github.com/coutureone/gitblog/issues/14</id><title>知否</title><updated>2025-07-22T10:16:04.371760+00:00</updated><content type="html"><![CDATA[<p>​	好久没有写博客了， 最近这段时间的我去干嘛了呢，当然是去找我人生中的另一半去了，在这段日子里面喜怒哀愁各种都有吧，但是在这其中让我感受最深的是一种特别的<code>illness</code>，<code>depressive disorder（抑郁症）</code>。</p>
<p>​	对我个人来说，我在此之前也有接触过抑郁症患者，当时的接触让我感觉好像和我们普通人没有区别，但是当我深入接触以后，发现一切没有这么简单，我对于抑郁症患者是表示同情的，因为我查阅了大量的书籍和数据，很多抑郁症的患者都是和童年以及当下的生活状态息息相关，抑郁症当然也有遗传的因素在，但是相对来说是偏少的。经过一段时间的接触，我甚至去想考一个心里咨询师的想法，现在越来越多的学校也好，公益活动活动等，都会设立一个心里咨询站，抑郁症我个人觉得是从心里-&gt;精神-&gt;生理，这一系列相互影响的，可以理解为一个<code>CBT</code>模型，行为、思维、感受三者的一个循环。</p>
<pre><code class="language-mermaid">graph LR
    A[外部事件/触发] --&gt; B[行为]
    B --&gt; C[思维]
    C --&gt; D[感受]
    D --&gt; B
    D --&gt; C
    B --&gt; D
    C --&gt; B

    %% 关键注释
    classDef red fill:#ffcccc,stroke:#f66;
    classDef green fill:#ccffcc,stroke:#0c0;
    classDef blue fill:#cce6ff,stroke:#06c;
    
    class A red;
    class B green;
    class C blue;
    class D red;

    %% 循环说明
    subgraph 核心循环
    B--&gt;C--&gt;D--&gt;B
    end

    %% 强化标注
    linkStyle 0,1,2,3 stroke:#333,stroke-width:2px;
    linkStyle 4,5 stroke:#f66,stroke-width:1px,stroke-dasharray:5;
</code></pre>
<p>​	    这种<code>CBT</code>模型也是最基础心理学应用场景，特别是对于抑郁症的人来说，经过我的接触，考虑问题的时候一定要站在他（她）的立场去思考问题，不管这个问题的对错，或者行为的对错，在处理事情的过程中如果你参与了，你觉得这种行为方式是不对的，请你不需要在当时表明你立场，你只需要在旁边的保持沉默即可，千万不能站在对立面，这样会瞬间激发他（她）的情绪，会让他（她）感受到伤害。</p>
<p>​	    抑郁症给我的个人感觉没有那么可怕，最难的是让我觉得如何帮助一个人状态走向正轨，摆脱心里和生理带来的伤害。从用药的减少到彻底剥脱药物，从一开始的躯体表现，到回归正常生活，从心里阴影到不再复发，这些东西我觉得不仅仅是心里医生或者是精神医生去研究的东西，而是我觉得我们每个人都应该学习的东西，不仅仅是为了他人，也是为了自己。</p>
<p>​	心灵就像是大海一样，蔚蓝浩瀚和波涛汹涌，希望每个人都能早日战胜自己的心魔，走出困境。</p>
<p>​															杭州.萧山</p>
<p>​															2025.7.11 中午</p>
]]></content><link href="https://github.com/coutureone/gitblog/issues/14"/><category term="杂记"/><published>2025-07-11T05:43:04+00:00</published></entry><entry><id>https://github.com/coutureone/gitblog/issues/13</id><title>IPv6的一个小TIP</title><updated>2025-07-22T10:16:04.486160+00:00</updated><content type="html"><![CDATA[<blockquote>
<p>纸上得来终觉浅，绝知此事要躬行</p>
</blockquote>
<p> 今天和一个工程师探讨了一个IPv6的问题，IPV6对于设备分为两种的状态：</p>
<ul>
<li>IPV6有状态</li>
<li>IPv6无状态</li>
</ul>
<p> 有状态：安卓手机是不支持有状态的，手机无法直接获取到IPv6地址，但是iOS可以。</p>
<p> 无状态：安卓和苹果都是支持的，隔一段时间IPv6地址就会变。</p>
<p> 有状态可以理解为固定IP地址，无状态可以理解为不固定IP地址，IPv6地址会变动。</p>
<p> 如果想所有设备出局都走IPv6，可以无线做IPV4隧道，在AC做4 to 6就可以。</p>
]]></content><link href="https://github.com/coutureone/gitblog/issues/13"/><category term="技术"/><published>2025-05-14T13:45:54+00:00</published></entry><entry><id>https://github.com/coutureone/gitblog/issues/12</id><title>一个IP冲突场景的解决方案</title><updated>2025-07-22T10:16:04.563759+00:00</updated><content type="html"><![CDATA[<blockquote>
<p>在生产场景中Vcenter遇到到一个因为docker内网地址和园区内网地址冲突了（当时规划的有问题），然后便有了解决方案和触发方式。</p>
</blockquote>
<h3><strong>1. Docker 业务与园区网络会冲突吗？</strong></h3>
<p><strong>不会直接冲突</strong>，但需注意 NAT 和路由规则。</p>
<ul>
<li>
<p><strong>原因</strong>：<br />
Docker 容器的 IP 属于<strong>虚拟机内部的私有网络</strong>，默认通过 NAT（网络地址转换）与外部通信。<br />
当容器访问校园网或互联网时，流量会经过宿主机的 IP（即虚拟机的 IP）进行转发，因此：</p>
<ul>
<li>校园网看到的流量源是<strong>虚拟机的 IP</strong>，而非 Docker 容器的内部 IP。</li>
<li>Docker 容器的私有 IP 不会暴露到校园网中，因此<strong>不会与校园网设备 IP 冲突</strong>。</li>
</ul>
</li>
<li>
<p><strong>例外情况</strong>：<br />
如果 Docker 容器配置为<strong>桥接模式</strong>（直接使用宿主机网络），则容器的 IP 需要与校园网在同一物理网络中。此时若 Docker 的 IP 段与校园网冲突，才会导致问题（与之前的问题相同）。</p>
</li>
</ul>
<hr />
<h3><strong>2. 两个虚拟机之间的 Docker 业务会冲突吗？</strong></h3>
<p><strong>可能会冲突</strong>，具体取决于虚拟机之间的网络架构。</p>
<h4><strong>(1) 虚拟机网络隔离（默认情况）</strong></h4>
<ul>
<li>
<strong>如果两个虚拟机通过 NAT 或独立网络隔离</strong>（例如 VMware/VirtualBox 的默认 NAT 模式）：  <ul>
<li>每个虚拟机的 Docker 网络是独立的，彼此不可见。</li>
<li>即使 Docker 使用相同的 IP 段（如 <code>10.0.0.0/24</code>），它们的 IP 地址仅在各自虚拟机内部有效。</li>
<li><strong>结论</strong>：虚拟机之间的 Docker 业务<strong>不会冲突</strong>。</li>
</ul>
</li>
</ul>
<h4><strong>(2) 虚拟机处于同一物理网络（例如桥接模式）</strong></h4>
<ul>
<li>
<strong>如果两个虚拟机通过桥接模式连接到物理网络</strong>（例如直接使用校园网的物理网卡）：  <ul>
<li>虚拟机本身会被分配校园网的 IP（如 <code>172.16.x.x</code>）。</li>
<li>Docker 容器的流量通过宿主机的 NAT 转发，因此容器 IP 仍不会暴露到物理网络中。</li>
<li><strong>结论</strong>：虚拟机之间的 Docker 业务<strong>不会冲突</strong>。</li>
</ul>
</li>
</ul>
<h4><strong>(3) 虚拟机之间直接通信（例如 Host-Only 或自定义网络）</strong></h4>
<ul>
<li>
<strong>如果两个虚拟机通过 Host-Only 或自定义网络互联</strong>：  <ul>
<li>
若两个 Docker 环境使用相同的 IP 段（如 <code>10.0.0.0/24</code>），且虚拟机之间直接路由流量到对方 Docker 网络：  <ul>
<li>当两个 Docker 容器使用相同的 IP（如 <code>10.0.0.2</code>）时，会发生 <strong>IP 冲突</strong>，导致通信混乱。</li>
<li>例如：VM1 的容器 <code>10.0.0.2</code> 可能被误认为是 VM2 的容器 <code>10.0.0.2</code>。</li>
</ul>
</li>
<li><strong>结论</strong>：若存在 IP 重复且网络互通，则<strong>会冲突</strong>。</li>
</ul>
</li>
</ul>
<hr />
<h3><strong>3. 冲突场景总结</strong></h3>
<table>
<thead>
<tr>
<th>场景</th>
<th>是否冲突</th>
<th>原因</th>
</tr>
</thead>
<tbody>
<tr>
<td>Docker 访问校园网</td>
<td>否</td>
<td>Docker 流量通过 NAT 转发，IP 不暴露</td>
</tr>
<tr>
<td>虚拟机默认隔离</td>
<td>否</td>
<td>各虚拟机 Docker 网络独立</td>
</tr>
<tr>
<td>虚拟机桥接物理网络</td>
<td>否</td>
<td>Docker 仍通过 NAT 隔离</td>
</tr>
<tr>
<td>虚拟机互联 + IP 重复</td>
<td>是</td>
<td>IP 地址在互联网络中重复，导致路由混淆</td>
</tr>
</tbody></table><hr />
<h3><strong>4. 解决方案</strong></h3>
<h4><strong>(1) 保持默认配置（推荐）</strong></h4>
<ul>
<li>如果虚拟机之间不需要直接访问对方的 Docker 容器，保持默认的 NAT 网络模式即可，无需修改配置。</li>
</ul>
<h4><strong>(2) 为每个虚拟机分配不同 Docker 网段</strong></h4>
<p>若需要虚拟机之间互联且访问对方的 Docker 容器，可为每个 Docker 环境分配<strong>不同的私有网段</strong>：</p>
<ul>
<li><strong>VM1 的 Docker</strong>：<code>10.0.1.0/24</code></li>
<li><strong>VM2 的 Docker</strong>：<code>10.0.2.0/24</code></li>
</ul>
<h4><strong>(3) 使用 Docker Overlay 网络（跨主机通信）</strong></h4>
<p>如果需要在多个虚拟机之间构建容器集群（如 Kubernetes），可使用 Docker 的 <strong>Overlay 网络</strong>，自动管理跨主机通信和 IP 分配：</p>
<pre><code class="language-bash"># 在 Swarm 模式下创建 Overlay 网络
docker network create --driver overlay my_overlay_net
</code></pre>
<h4><strong>(4) 避免手动指定重复 IP</strong></h4>
<p>若需手动管理容器 IP，确保不同虚拟机中的容器 IP 不重复：</p>
<pre><code class="language-bash">docker run --ip 10.0.0.100 ...
</code></pre>
<hr />
<h3><strong>5. 验证方法</strong></h3>
<ul>
<li>
<strong>查看容器 IP</strong>：<pre><code class="language-bash">docker inspect &lt;容器ID&gt; | grep IPAddress
</code></pre>
</li>
<li>
<strong>测试跨虚拟机通信</strong>：<pre><code class="language-bash"># 在 VM1 中 ping VM2 的容器 IP（需确保网络互通）
docker run --rm alpine ping &lt;VM2容器IP&gt;
</code></pre>
</li>
</ul>
<hr />
<h3><strong>总结</strong></h3>
<ul>
<li><strong>与校园网的冲突</strong>：只要 Docker 不使用校园网的 IP 段，默认不会冲突。</li>
<li><strong>虚拟机间冲突</strong>：仅在虚拟机互联且 Docker 使用相同 IP 段时可能发生。通过隔离网络或分配不同网段即可规避。</li>
</ul>
]]></content><link href="https://github.com/coutureone/gitblog/issues/12"/><category term="技术"/><published>2025-05-12T10:47:05+00:00</published></entry><entry><id>https://github.com/coutureone/gitblog/issues/11</id><title>Running</title><updated>2025-07-22T10:16:04.668961+00:00</updated><content type="html"><![CDATA[<p> 中午休息的时候没什么事情，对自己的跑步页面进行更新，与其说是更新，更不如说直接拿着大佬更新好的代码，然后自己进行CV，这样进行更新，今年的自己的目标是1000公里，截止到目前，我跑了不到100公里，距离自己的目标还是相差很远，
<img src="https://github.com/user-attachments/assets/fa4ae24e-bc1e-4882-9bf9-98d25ec25daf" alt="Image" />
 感觉自己现在是堕落了，没有一个很强的意志力去坚持，前几天去爬山，明显感觉自己的腿部力量和核心力量在下降，髂胫束开始有些疼，之前我跑了500公里都没有疼过，没想到爬山还没有爬完就开始疼了。终究还是自己的肌肉群下去了，肌肉就是这样用进废退罢了。
<img src="https://github.com/user-attachments/assets/ba58e752-f76f-4614-96fd-85de5739bd23" alt="Image" />
 自己确实也要拾起来了，早睡早起进行跑步，或者是晚上进行跑步，多种方式，但是终究还是需要自己去坚持的，希望有一天我能跑到10000公里，那一天很快，也很长。
 烦心的事情自己就不去想了，随遇而安~</p>
]]></content><link href="https://github.com/coutureone/gitblog/issues/11"/><category term="随笔"/><published>2025-05-08T11:14:33+00:00</published></entry><entry><id>https://github.com/coutureone/gitblog/issues/10</id><title>喝大学室友的喜酒</title><updated>2025-07-22T10:16:04.768244+00:00</updated><content type="html"><![CDATA[<blockquote>
<p>男人的一生情谊有三种：同过窗，扛过枪，嫖过娼，当然我与室友的情谊就是第一种。</p>
</blockquote>
<p>​	我的大学室友是六个人，当时分寝室的室友是按照专业分的，后面我们进行班级划分的时候，我们是按照寝室进行划分的，所以大学四年我们都在同一个寝室。大家的关系也都玩的也很好，离校前夕，彻夜畅谈，当时主要的话题就是我们这些人谁会第一个结婚，都认为自己肯定不是第一个，没有想到一别就是三年，他去年这个时候相亲，今年结婚了。</p>
<p>​	他老家在新乡长垣县，我从信阳做高铁先去郑州，其他的几个要去的同学在郑州集合，但是工作原因，有两个室友没能来，都是为了生活而奔波，缺少一些遗憾吧。关于郑州，其实这座城市是又爱又恨，三年没有来，很多东西都变了， 最明显感受的就是没有当年那么乱了，糊辣汤和烩面还是郑州的特色，晚上几个人在郑州需要过夜，吃饭我特意点了一碗烩面，还是当年熟悉的味道，可能对于不喜欢吃面的人来说，郑州不是一座特别好的城市了，相比于杭州，郑州好吃的面可太多了，各种各样的面食。晚上住了一个电竞酒店，就是为了在一起聊聊，吹吹牛逼，但是再也找不到大学的时候那种激情与理想抱负。经历了社会三年的洗礼，都有了自己的想法。</p>
<p>​	第二天（正月十一）一大早，高铁从郑州东出发直接去新乡了，下了高铁室外温度-15°C，刚好赶上今年最冷的天气，室友已经安排好车过来接了。直接给我们拉到住的酒店，行李放了以后他直接过来接去了他老家，看到墙上贴的结婚海报，发自内心的祝福，幸福啊~，下午和他一起去他媳妇家里拉了嫁妆，第一次参加这种习俗活动，感觉还挺有意思的，然后就是拿东西，他作为东家去的人每人发了一包喜烟，东西拿上车然后跟车回来就结束了。到了晚上在婚礼酒店等着彩排，我有幸作为伴郎，一直等到晚上七点才进行彩排，其实内容也不是很多，根据主持人的安排就行了，在出场之前，伴娘和伴郎按照顺序出场从T台走一圈即可。排练结束以后，一起吃饭，因为不会喝酒，没有喝，吃席主打就是一个吃，饭后回酒店休息了。</p>
<p>​	正月十二，早上九点我们准时从他老家进行出发接亲，接亲开门也没有那么复杂，“只要红包足够，一切都好说”，当然是开玩笑的，没有一些小插曲，就没有意思了，进门就是做游戏，整个过程还是挺有意思的，然后就是回酒店开始婚礼仪式，这些东西感觉其他地区可能都是大同小异了，有一个陋习（或者是习俗）我是理解不了一点，就是往脸上涂鞋油，这个是什么奇怪的习俗我是第一次见，真的是有些理解不了。整个过程就是欢乐喜庆的。下午吃过席以后，就不让室友送了，其他的同学一起直接就回新乡了，有的坐火车去郑州，我是第二天早上到杭州的高铁，我留下去新乡的胖东来转了一圈，发现胖东来也没有网上说的那么好，主要是人太多了，多到夸张。就简单买了两个他们的特产月饼走匆匆离开了，然后简单吃了一碗烩面，回酒店休息了。第二天一大早回杭州的高铁，至此我的这次喝喜酒之旅结束~</p>
<p>​	自己也没有多么华丽的文笔，就是简单的记录，结婚算是人的一生最重要的事情之一，愿大家都能找到彼此的幸福！</p>
<p>​		</p>
]]></content><link href="https://github.com/coutureone/gitblog/issues/10"/><category term="随笔"/><published>2025-02-12T07:02:31+00:00</published></entry><entry><id>https://github.com/coutureone/gitblog/issues/9</id><title>关于我的家庭组网</title><updated>2025-07-22T10:16:04.899676+00:00</updated><content type="html"><![CDATA[<h1>关于我的家庭组网</h1>
<p>​	最近放假回老家，发现网络一直有问题，当然在我写这篇博客的时候还是有问题没有解决。</p>
<p>​	一开始网路架构是正常的架构：入户光纤-&gt;光猫-&gt;路由器，路由器做AP用，组成了有线mesh，分别是小米的<code>AX1800</code>和<code>AX6000</code>，但是我发现不管是手机<code>ping</code>内网还是电脑<code>ping</code>内网，都是会发生跳<code>ping</code>，非常奇怪，然后我就按照自己的思路先自己排查问题了，网线和水晶头没问题，光衰也是正常，有线和无线都跳<code>ping</code>，按照各位网络大佬的指点，我开始重新组网络。</p>
<p>​	首先给光猫改成桥接，然后下面加了个软路由，通过软路由进行拨号上网。</p>
<p>​	其次两个路由器连接软路由，路由改成<code>AP</code>模式，进行有线中继。</p>
<p>​	最后进行测试，有线网络电脑<code>ping</code>是正常的，不跳<code>ping</code>，但是手机和电脑无线还是跳<code>ping</code>，我尝试修改路由器的信道，但是发现问题还是没有解决。</p>
<p><img src="https://s3.qjqq.cn/50/6791a43944855.webp%21color" alt="" /></p>
<p>​	图中就是无线<code>ping</code>的问题，内网发现还是严重跳<code>ping</code>，不知道各位大佬有啥思路和想法让我去排查问题，目前就是能用就行，也没找到这个问题到底是什么产生的，我怀疑是路由器的AP模式问题。</p>
]]></content><link href="https://github.com/coutureone/gitblog/issues/9"/><category term="技术"/><published>2025-01-23T02:09:43+00:00</published></entry><entry><id>https://github.com/coutureone/gitblog/issues/8</id><title>2024从那里写呢</title><updated>2025-07-22T10:16:05.013465+00:00</updated><content type="html"><![CDATA[<blockquote>
<p>光阴似箭催人老，日月如梭趱少年。</p>
</blockquote>
<p>​	恍恍惚惚又是一年，2024好像自己做了很多事情，又好像什么都没做，工作，生活，学习...这一年自己经历太多了，身边亲人的离世让我真正感受到了，没有什么比健康更重要，我也开始给跑步拾起来，看这自己大学时候的跑步记录，想要达到自己的当时配速和心率比，可能我需要跑1000公里都不一定能回去了，当然目前也是跑了将近600公里，和那时候的自己的心肺功能相差还是很多，初心不忘，贵在坚持，以健康为主。</p>
<p>​	好记性不如烂笔头，过去年自己也是开始好好写自己的博客，虽然看到这篇文章发现博客没有什么文章，是因为我没有进行迁移，自己的跑步也通过自动化的形式进行展示。感谢<code>GitHub</code>上的开源大佬，对于我在网站部署很大的帮助（文章结尾我会@他们的<code>GitHub</code>地址），很多技术真的感谢开源社区基于了很大的帮助。</p>
<p>​	钱是活下去和腰杆挺直的资本，过去的一年自己有些时候曾想放弃现在的这份工作，但是现在的就业形式太差了，虽然不挣大钱，但是稳定起码也是能养活自己，工作环境和同事相处都挺好，未来谁知道呢，早点做些准备吧，多考一些有用的证书，对我的当下来说可能更为重要，逼自己走出舒适的圈子。</p>
<p>​	25年自己想做的事情有很多，希望自己能够真正的沉淀下来，好好打磨自己。关于考研我觉得自己是应该提上日程了，我在纠结这个在职研究生自己读还是不读，如果你也有相同的处境，我倒是希望你可以分享一下你的建议。对于我个人来说脱产去读研不太现实。</p>
<p>​	说到这里，深夜，我应该是要开始收拾东西了，放假了，有钱没钱回家过年，开始收拾东西，准备回家了。</p>
<h4>感谢</h4>
<p>@0x676e67 @yihong0618 @WuLongMiTaoLaiYiDa @mrasong @isYangs @superleeyom @everfu</p>
]]></content><link href="https://github.com/coutureone/gitblog/issues/8"/><category term="总结"/><published>2025-01-19T01:48:17+00:00</published></entry><entry><id>https://github.com/coutureone/gitblog/issues/7</id><title>一不留神的网络环路</title><updated>2025-07-22T10:16:05.122049+00:00</updated><content type="html"><![CDATA[<blockquote>
<p>一个小小的操作失误，引发的一次生产事故</p>
</blockquote>
<p> 关于在<code>vsphere</code>中给划分的<code>VLAN</code>的网关，作为虚拟机的<code>IP</code>下发了，<code> VLAN</code>号和<code>IP</code>地址都是固定的，导致了一次该网段下面的<code>Linux</code>服务器网络直接发生了环路。但是<code>Windows</code>集群是不受到影响的，遇到这种问题一般都不会想到会是<code>ARP</code>冲突问题，一半都是排查服务器，网络，路由，防火墙等问题，没想到<code>ARP</code>问题，但是最后给<code>VLAN</code>直接删除，但是网络还是正常能通的，这就说明了问题了。<code>ARP</code>冲突，根据<code>mac</code>地址，然后找到对应的那台服务器的，关机（或者是修改IP），然后网络恢复正常。</p>
<p> 这次网络事故真的是看不起眼的问题，导致了生产事故的产生，真的是吃一堑长一智因为想弄清除问题真正产生的原因，自己也是用<code>AI</code>和浏览器去查询了一下<code>Windows</code>和<code>Linux</code>网络规则，具体可以参考下面说明。</p>
<p> 这篇博客就到这里，真的是一次很看不眼的问题引起的生产事故，到此这个问题结束，不说了，该收拾东西回家，下班了~</p>
<p>在给网关配置IP地址时，Linux和Windows的行为差异主要源于两者在网络栈实现和路由处理机制上的不同。以下是对这一问题的详细分析：</p>
<hr />
<h3>1. <strong>Linux 的环路问题</strong></h3>
<p>在Linux中，如果将网关的IP地址配置为本机的一个接口IP，可能会导致路由环路。原因如下：</p>
<ul>
<li><strong>路由表处理机制</strong>：
Linux的路由表会明确指定网关地址，如果网关地址是本机接口IP，数据包会被发送到本机，而不是外部网络。这会导致数据包在本地循环，无法正确转发。</li>
<li><strong>ARP 请求</strong>：
当Linux尝试将数据包发送到网关时，会发送ARP请求来解析网关的MAC地址。如果网关IP是本机接口IP，ARP请求会解析到本机，导致数据包被送回本机，形成环路。</li>
<li><strong>默认行为</strong>：
Linux默认不会检查网关IP是否为本机接口IP，因此容易因配置错误引发环路。</li>
</ul>
<hr />
<h3>2. <strong>Windows 的环路避免机制</strong></h3>
<p>Windows在网络栈实现上对网关配置有更强的检查和保护机制，因此不容易出现环路问题。原因如下：</p>
<ul>
<li><strong>网关IP检查</strong>：
Windows在配置网关时会检查网关IP是否为本机接口IP。如果检测到网关IP是本机IP，Windows会拒绝该配置或忽略该网关，从而避免环路。</li>
<li><strong>路由优先级</strong>：
Windows的路由表处理机制会优先处理直连路由（即本机接口所在的网络），而不是通过网关转发。如果网关IP是本机接口IP，Windows会优先将数据包发送到本地接口，而不是尝试通过网关转发。</li>
<li><strong>ARP 处理</strong>：
Windows的ARP处理机制更加智能，能够避免将网关IP解析为本机MAC地址，从而防止数据包在本地循环。</li>
</ul>
<hr />
<h3>3. <strong>根本原因</strong></h3>
<ul>
<li><strong>Linux</strong>：更注重灵活性和可配置性，允许用户自由配置路由和网关，但需要用户对网络配置有深入理解，否则容易引发问题。</li>
<li><strong>Windows</strong>：更注重用户体验和安全性，内置了许多检查和保护机制，防止用户因配置错误导致网络问题。</li>
</ul>
<hr />
<h3>4. <strong>如何避免Linux中的环路问题</strong></h3>
<p>如果在Linux中需要避免因网关配置导致的环路问题，可以采取以下措施：</p>
<ul>
<li>
<p><strong>检查网关配置</strong>：确保网关IP不是本机接口IP。</p>
</li>
<li>
<p><strong>使用路由规则</strong>：通过<code>ip route</code>命令明确指定路由规则，避免数据包被错误地发送到本机。</p>
</li>
<li>
<p><strong>启用反向路径过滤（RPF）</strong>：通过<code>sysctl</code>启用反向路径过滤，防止数据包从错误的方向进入系统。</p>
<p>bash</p>
<p>复制</p>
<pre><code>sysctl -w net.ipv4.conf.all.rp_filter=1
sysctl -w net.ipv4.conf.default.rp_filter=1
</code></pre>
</li>
<li>
<p><strong>使用防火墙规则</strong>：通过<code>iptables</code>或<code>nftables</code>限制数据包的流向，防止环路。</p>
</li>
</ul>
<hr />
<h3>总结</h3>
<p>Windows和Linux在网关IP配置上的行为差异，主要源于两者在网络栈实现和路由处理机制上的不同。Windows通过内置的检查和保护机制避免了环路问题，而Linux则更依赖用户的配置和管理能力。为了避免Linux中的环路问题，用户需要仔细检查网关配置，并采取适当的防护措施。</p>
]]></content><link href="https://github.com/coutureone/gitblog/issues/7"/><category term="技术"/><published>2025-01-14T08:19:43+00:00</published></entry><entry><id>https://github.com/coutureone/gitblog/issues/6</id><title>关于我</title><updated>2025-07-22T10:16:05.232172+00:00</updated><content type="html"><![CDATA[<h3>简介</h3>
<ul>
<li>座右铭：物来顺应 未来不迎 当时不杂 既过不恋；</li>
<li>出生：一个土生土长的农村孩子；</li>
<li>工作：不是当牛马，就在牛马的路上；</li>
<li>爱好：喜欢运功，喜欢技术。</li>
</ul>
<h4>你长得那么好看，谢谢你来看我~</h4>
]]></content><link href="https://github.com/coutureone/gitblog/issues/6"/><category term="About Me"/><published>2025-01-09T12:21:40+00:00</published></entry><entry><id>https://github.com/coutureone/gitblog/issues/5</id><title>建站成功✌️</title><updated>2025-07-22T10:16:05.349262+00:00</updated><content type="html"><![CDATA[<blockquote>
<p>谨以此篇文章作为建站纪念，感谢所有大佬的帮助，我会在文章结尾提供连接</p>
</blockquote>
<p> 经过自己两周的周末时间，终于是给这个通过issues写博客弄好了，前后端分离，都是通过GitHub托管的方式，聊聊一些问题：</p>
<ul>
<li>项目主要参考：<a href="https://github.com/superleeyom">superleeyom</a>大佬的博客。</li>
<li>前后端分离式，前端就是GitHub Page，但是我也进行Vercel部署了，在经过Vercel部署的时候并不是直接导入那么简单，因为引入的是<a href="https://github.com/LoeiFy">LoeiFy</a>大佬的<a href="https://github.com/LoeiFy/Mirror">Mirror</a>项目，很巧妙的用的用Github API 进行调用，这里加密绑定的是域名，如果前端的page直接导入Vercel打开就是没有权限，也不会显示，其实并不操作问题，而是需要对域名进行绑定解析即可。</li>
<li>后端主要是参考的<a href="https://github.com/yihong0618">yihong0618</a>大佬的<a href="https://github.com/yihong0618/gitblog">gitblog</a>开源项目</li>
<li>关于页面的魔改，页面的魔改我想用cursor在我index里面加入暗夜模式以及切换按钮，但是AI并不是万能，这里要感谢<a href="https://github.com/isYangs">isYangs</a>大佬对于本博客的暗黑模式提供的大力帮助。</li>
</ul>
]]></content><link href="https://github.com/coutureone/gitblog/issues/5"/><published>2025-01-05T13:49:53+00:00</published></entry></feed>